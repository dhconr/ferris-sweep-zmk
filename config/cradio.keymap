/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keymap_italian.h"

// Layer definitions
    #define BASE 0
    #define SYM 1
    #define SYM2 2
    #define SETTINGS 3
// -----------------

&mt {
   //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

&sk {
    ignore-modifiers;
};

/ {
		macros {
				// sometimes my device thinks a modifier is being held down
				// pressing all modifiers fixes it.
				unstick: unstick {
					label = "ZM_unstick";
					compatible = "zmk,behavior-macro";
					#binding-cells = <0>;
					bindings
						= <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
				};

                switch_bt0_and_layer: {
                    label = "Switch to BT0 and toggle layer if needed";
                    compatible = "zmk,behavior-macro";
                    #binding-cells = <0>;
                    bindings = <&tog_if_on SETTINGS &bt BT_SEL 0>;
                };
		};

    combos {
        compatible = "zmk,combos";
				// both right thumb keys
        /* combo_accent { */
        /*     timeout-ms = <300>; */
        /*     key-positions = <32 33>; */
        /*     bindings = <&mo ACCENT>; */
        /* }; */
        // internal-left & external-right thumb keys
        /* combo_sym2 { */
        /* 		timeout-ms = <200>; */
        /* 		key-positions = <31 33>; */
        /* 		bindings = <&mo SYM2>; */
        /* }; */
        // both left thumb keys
        combo_settings {
                timeout-ms = <300>;
                key-positions = <32 33>;
                bindings = <&tog SETTINGS>;
        };
    };

    keymap {
            compatible = "zmk,keymap";

        // Base alpha layer
       		default_layer {
		bindings = <
		&kp Q &kp W &kp E &kp R &kp T           &kp Y &kp U  &kp I     &kp O   &kp P 
		&kp A &kp S &kp D &kp F &kp G           &kp H &kp J  &kp K     &kp L &kp IT_OGRV
		&mt LSHIFT Z &mt LCTRL X &kp C &kp V &kp B           &kp N &kp M  &kp COMMA &mt RCTRL DOT &mt RSHIFT SLASH
             &kp BSPC &lt SYM2 TAB           &lt SYM RETURN &kp SPACE
		>;
		};

        // Numbers and high frequency symbols
       		sym_layer {
		bindings = <
		&kp N1 &kp N2 &kp N3 &kp N4 &kp N5		                                    &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
		&kp EXCL &kp AT_SIGN &kp HASH &kp DLLR &kp PERCENT      &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR
		&kp EQUAL &kp PLUS &kp MINUS &kp UNDERSCORE &kp APOS 	&kp LBRC &kp RBRC &kp LBKT &kp RBKT &kp DQT
					                                        &lt SETTINGS BSPC  &kp ESC       &trans &trans
		>;
		};

        // Low frequency symbols.
       		symbols_2_layer {
		bindings = <
		&kp IT_CARET &kp IT_UNDER &kp IT_PND &kp IT_EUR &kp IT_HASH         &none &none &none &none &none 
		&kp IT_BKTK &kp IT_TILDE &kp IT_BSLH &kp IT_PIPE &kp IT_AND         &kp LEFT &kp DOWN &kp UP &kp RIGHT &none
		&none 			&none 			 &kp IT_SECT &kp IT_CCED &kp IT_DEG				  &none &none &none &none &none
          				           												&none &none        	&none &none 
		>;
		};


        // Used to change the keyboard's settings.
       		settings_layer {
		bindings = <
		&bootloader &none &none &bt BT_CLR &mac switch_bt0_and_layer               &bt BT_SEL 3 &none &kp C_VOLUME_UP &none &bootloader 
		&none &none &none &none      &bt BT_SEL 1 						  &bt BT_SEL 4 &none &kp C_VOLUME_DOWN &none &none
		&none &none &none &none      &bt BT_SEL 2               &bt BT_SEL 5 &none &none &none &none
          				     &none &none                         &none &none 
		>;
		};
        
	};
};
